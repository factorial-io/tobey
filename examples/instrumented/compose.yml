# A docker compose file that sets up a Tobey instance that is instrumented and
# exposes metrics to Prometheus via /metrics endpoint. The metrics are then
# scraped by prometheus. Grafana is used to visualize the metrics scraped by
# Prometheus.
#
# Use the following command:
#   docker compose up
#
# Then hit the tobey instance:
#   curl http://localhost:8080/ -X POST -d 'https://example.com'
# 
# Now:
# - Access the Jaeger UI at http://localhost:16686/
# - Access the Grafana UI at http://localhost:3000/ (admin/admin)

services:
  tobey:
    ports:
      - "8080:8080"
    build:
      context: ../../
    environment:
      - TOBEY_TELEMETRY="metrics traces"
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://jaeger:4318/v1/traces
      - TOBEY_RESULT_REPORTER_DSN=disk:///tmp/tobey
    volumes:
      - tobey-cache:/cache

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "4318:4318"


volumes:
  tobey-cache:
  grafana-data:
